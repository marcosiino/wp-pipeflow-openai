<?php

require_once ABSPATH . "wp-content/plugins/wp-pipeflow/classes/Pipeline/CorePipeFlow.php";
require_once ABSPATH . "wp-content/plugins/openai-for-pipeflow-wp-plugin/classes/Stages/AIImageGeneration/AIImageGenerationStage.php";

class AIImageGenerationStageFactory implements AbstractStageFactory
{
    public static string $defaultModel = "dall-e-2";
    public static string $defaultSize = "512x512";
    public static bool $defaultHighFidelity = false;
    public static int $defaultImageCount = 1;

    /**
     * @inheritDoc
     */
    public function instantiate(StageConfiguration $configuration): AbstractPipelineStage
    {
        //TODO: validate $configuration
        return new AIImageGenerationStage($configuration);
    }

    /**
     * @inheritDoc
     */
    public function getStageDescriptor(): StageDescriptor
    {
        $description = "Generates one or more images with OpenAI and outputs the generated image urls into the output context.";
        $setupParameters = array(
            "prompt" => "The image generation prompt for the AI. You can use Context Placeholders to feed context values (i.e. results from previous stages) into the prompt.",
            "resultTo" => "(optional) The name of the context parameter to which the generated images URLS are saved",
            "count" => "(optional, default: " . AIImageGenerationStageFactory::$defaultImageCount . ") An integer which specified the number of images to generate.",
            "highFidelity" => "(optional, default: " . AIImageGenerationStageFactory::$defaultHighFidelity . ") A boolean which specifies if the images should be generated with higher quality. Implies higher costs.",
            "size" => "(optional, default: " . AIImageGenerationStageFactory::$defaultSize .") A string specifying the size of the generated image, i.e. \"1024x1024\". The specified size must by supported by the selected model",
            "model" => "(optional, default: " . AIImageGenerationStageFactory::$defaultModel . ") The OpenAI model to use for image generation",
        );

        $contextInputs = array(
            "OPENAI_API_KEY" => "The OpenAI's API key to use to perform the image generation api request to OpenAI.",
        );

        $contextOutputs = array(
            "GENERATED_IMAGE_URLS" => "An array of strings with the URLs of the images generated by the AI. If resultTo input settings parameter is setup, the output image urls is set into the context parameter specified there instead.",
        );

        return new StageDescriptor("AIImageGeneration", $description, $setupParameters, $contextInputs, $contextOutputs);
    }
}